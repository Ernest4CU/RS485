2016年3月12日18:14:26
本工程用于集成MSP430F149 CCS6.1工程模板
工程结构包括：
	main	程序入口，也是程序逻辑结构的最上层
		内部包含Sys_init()函数和Sys_loop()函数，分别用来做系统的初始化和正常运行。
	interrupt	中断处理函数均在此处
	system.c	包括时钟初始化和IO初始化
		system.h对system.c中的函数进行声明
	Const.c	常数数组在此定义
		Const.h对Const.c中定义的常数数组进行extern声明
	Sys_Config.h	系统配置（CPU_F），宏定义和一些基本函数（包括循环左移，右移和延时）
	System_init.c	系统初始化函数的定义
		System_init.h系统初始化函数的声明
	System_running.c	系统正常运行时的逻辑层（在此编写正常工作逻辑）
		System_running.h Sys_loop()函数的声明，用于main.c中调用Sys_loop()函数
	type.h	定义了一系列的数据类型
	Watchdog.c	看门狗相关的函数定义
		Watchdog.h Watchdog.c中的函数进行声明
		
现有扩展模块：
	Lcd1602.c	LCD1602相关函数的定义
		LCD1602.h Lcd1602.c中的函数进行声明
		
#Msp430f149 Flash功能开发
2016年3月12日18:54:21

2016年3月17日10:27:48
静力触探 flash 字节存储，字存储，数组存储的开发。
写字节：
	方法1：	1.判断所写数据的地址所在段（segment）的基地址和段长。
			2.复制该段全部数据到数组中。
				1).可能是信息段128Byte
				2).可能是主存储器段512Byte
			3.擦除相应段。
			4.改变数组中对应位的数值。
			5.将数组全部写回该段。
			
	方法2：	1.判断所写数据的地址所在段（segment）的基地址和段长。
			2.子函数（保护数据）
				2.1.复制该段全部数据到数组中。
					1).可能是信息段128Byte
					2).可能是主存储器段512Byte
				2.2擦除相应段.
				2.3将不需改变的值重写回该段
			3.讲要改变的值写入该段对应位（基址+相对地址）
			
方法2成立的原理：msp430对flash的写操作是只允许将1写为0，而不运行，将0改为1，而擦除操作是将全段数据置1，之后利用写函数写入数据。

2016年12月6日
	经查验现有FLash存储功能，详见Flash.h
	今预加入uart功能